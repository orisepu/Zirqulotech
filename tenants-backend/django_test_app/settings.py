"""Django settings for test_django_tenants project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path
from corsheaders.defaults import default_headers
import sys
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent
PYTHON_EXE = sys.executable  # as√≠ ‚Äúviews.py‚Äù tendr√° el path correcto de la venv
PRECIOS_B2B_MODEL = "productos.PrecioRecompra"  # app_label.ModelClass
CAPACIDAD_MODEL   = "productos.Capacidad"           # app_label.ModelClass
CAPACIDAD_GB_FIELD = "tama√±o"
CAPACIDAD_REL_MODEL_FIELD = "modelo"
REL_MODELO_NAME_FIELD = "descripcion"
# Opcional: CSV con equivalencias para resolver modelo_norm -> capacidad_id
EQUIVALENCIAS_CSV = "/srv/checkouters/Partners/tenants-backend/equivalencias_modelos.csv"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "uv5(me+wl&bx5ag39_vimy2ie7mxdm&42a6$0t-+jfb+@6m(u2"  # noqa: S105

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['progeek.es', 'localhost','192.168.1.177', 'zirqulotech.com',"www.zirqulotech.com"]


# Application definition

SHARED_APPS = [
    "corsheaders",
    # django-tenants app
    "django_tenants",
    # django apps
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # django-tenant-users apps
    "tenant_users.permissions",
    "tenant_users.tenants",
    "django_filters",
    # Test project apps
    
    "progeek",
    'productos',
    'notificaciones',
    "django_test_app.companies",
    "django_test_app.users",
]

TENANT_APPS = [
    "django.contrib.auth",
    "django.contrib.admin",
    "django.contrib.contenttypes",
    "tenant_users.permissions",
    'checkouters',
    "chat",
]

INSTALLED_APPS = list(SHARED_APPS) + [
    app for app in TENANT_APPS if app not in SHARED_APPS
]


# django-tenant-users settings
TENANT_USERS_DOMAIN = "progeek.es"
AUTHENTICATION_BACKENDS = ("tenant_users.permissions.backend.UserBackend",)
AUTH_USER_MODEL = "users.TenantUser"

# django-tenants settings
TENANT_MODEL = "companies.Company"
TENANT_DOMAIN_MODEL = "companies.Domain"


MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django_test_app.middleware.custom_tenant_middleware.HeaderTenantMiddleware",
    "django_test_app.middleware.custom_tenant_middleware.FixedTimeZoneMiddleware",
    #'django_test_app.middleware.public_route_bypass.UnifiedTenantMiddleware',
    "django_test_app.middleware.tenant_logging.RequestLoggingMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]


TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]
ASGI_APPLICATION = "django_test_app.asgi.application"
WSGI_APPLICATION = "django_test_app.wsgi.application"
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
}
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],
        },
    },
}
# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django_tenants.postgresql_backend",
        "NAME": "tenantdb",
        "USER": "tenantuser",
        "PASSWORD": "tenantpass",
        "HOST": "localhost",
        "PORT": "5432",
    },
}

DATABASE_ROUTERS = ("django_tenants.routers.TenantSyncRouter",
                    "django_test_app.routers.TenantOnlyRouter",
                    )


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = []
CORS_ALLOW_ALL_ORIGINS = False
CORS_ALLOWED_ORIGIN_REGEXES = [
    r"^https://.*\.progeek\.es$",
    r"^https://.*\.zirqulotech\.com$",
]
CORS_ALLOW_HEADERS = list(default_headers) + ["Authorization"]
CORS_ALLOWED_ORIGINS = [
    "https://progeek.es","https://zirqulotech.com","https://www.zirqulotech.com",
    "http://localhost:3000",  # si usas frontend local
]
CORS_ALLOW_CREDENTIALS = True
# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "es-es"

TIME_ZONE = "Europe/Madrid"

USE_I18N = True

USE_L10N = True

USE_TZ = True

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

EMAIL_HOST_USER = 'orisepu@gmail.com'
EMAIL_HOST_PASSWORD = 'gtrt chye lmis dvmw'  # üîê NO tu contrase√±a normal
DEFAULT_FROM_EMAIL = 'orisepu@gmail.com'
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "static"
ROOT_URLCONF = "django_test_app.urls"
os.getenv("DB_NAME", "tenantdb_saas"),
# Media Urls
MEDIA_URL = "/media/"
MEDIA_ROOT = Path(os.getenv("MEDIA_ROOT", "/srv/checkouters/Partners/media"))  # valor por defecto si no hay env

# carpeta privada dentro de MEDIA_ROOT
PRIVATE_MEDIA_ROOT = MEDIA_ROOT / "media_private"

OTP_TTL_MINUTES = 10 
OTP_COOLDOWN_SECONDS = 60

FRONTEND_BASE_URL= "https://zirqulotech.com"
LEGAL_DEFAULT_OVERRIDES = {
    "operador": {
        "nombre": "Zirqulotech S.L.",
        "cif": "B00X00000",
        "direccion": "C/ Ejemplo 123, 08000 Barcelona, Espa√±a",
        "email": "legal@zirqulotech.es",
        "telefono": "+34 600 000 000",
        "web": "https://zirqulotech.es",
    }
}

# Device Mapping V2 Configuration
# Sistema de mapeo inteligente con estrategias h√≠bridas por tipo de dispositivo
MAPPING_V2_ENABLED = True
MAPPING_V2_PERCENTAGE = 100  # Activado al 100% - base de conocimiento poblada
MAPPING_V2_DEVICE_TYPES = ['mac', 'iphone', 'ipad']  # Todos los tipos de dispositivos Apple
COMPARE_MAPPING_VERSIONS = True  # Ejecutar ambos sistemas para comparar rendimiento
SECURE_SSL_REDIRECT = False
SESSION_COOKIE_SECURE = False
CSRF_COOKIE_SECURE = False
#SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
CSRF_TRUSTED_ORIGINS = [
    "https://progeek.es" "https://zirqulotech.com",  # üëà A√±ade tu dominio aqu√≠
]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'stream': sys.stdout,
            'formatter': 'simple',  
        },
    },
    'formatters': {
        'simple': {
            'format': '[{levelname}] {message}',
            'style': '{',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
        'propagate': False,
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
        },
        'django_test_app.middleware': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        'django_test_app.middleware.custom_tenant_middleware': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        'checkouters': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
        "b2c.contratos": {
            "handlers": ["console"], 
            "level": "INFO"
        },
    },
}